{"ast":null,"code":"var _jsxFileName = \"/Users/thomasmbrice/Desktop/coding/cse316/gamer/project-predditstoriesyoutubeshorts/client/src/components/phreddit.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Banner from './layout/Banner';\nimport Navbar from './layout/Navbar';\nimport HomeView from './views/HomeView';\nimport CommunityView from './views/CommunityView';\nimport SearchView from './views/SearchView';\nimport PostView from './views/PostView';\nimport NewCommunityView from './views/NewCommunityView';\nimport NewPostView from './views/NewPostView';\nimport NewCommentView from './views/NewCommentView';\nimport WelcomePage from './views/welcome';\nimport UserProfileView from './views/UserProfileView';\nimport * as api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Phreddit() {\n  _s();\n  const [currentView, setCurrentView] = useState('welcome'); // defults to welcome\n\n  const [authState, setAuthState] = useState(() => {\n    const savedAuth = localStorage.getItem('authState');\n    try {\n      return savedAuth ? JSON.parse(savedAuth) : {\n        type: null,\n        user: null\n      };\n    } catch {\n      return {\n        type: null,\n        user: null\n      };\n    }\n  });\n  useEffect(() => {\n    if (authState !== null && authState !== void 0 && authState.type) {\n      localStorage.setItem('authState', JSON.stringify(authState));\n    } else {\n      localStorage.removeItem('authState');\n    }\n  }, [authState]);\n  useEffect(() => {\n    // Redirect to home if the user is authenticated on refresh\n    if (authState.type) {\n      setCurrentView('home');\n    } else {\n      setCurrentView('welcome');\n    }\n  }, [authState.type]); // This ensures it runs when `authState.type` changes\n\n  useEffect(() => {\n    const checkAuthStatus = async () => {\n      try {\n        const authResponse = await api.checkAuth();\n        if (authResponse.data.authenticated) {\n          setAuthState({\n            type: 'user',\n            user: {\n              user: authResponse.data.user\n            } // Match structure\n          });\n        }\n      } catch (err) {\n        localStorage.removeItem('authState');\n        setAuthState({\n          type: null,\n          user: null\n        });\n      }\n    };\n    checkAuthStatus();\n  }, []);\n  const handleLogout = async () => {\n    try {\n      await api.logout();\n    } catch (err) {\n      console.error('Logout error:', err);\n    } finally {\n      localStorage.removeItem('authState');\n      setAuthState({\n        type: null,\n        user: null\n      });\n      setCurrentView('welcome');\n    }\n  };\n  const handleProfileClick = () => {\n    // new\n    setCurrentView('profile');\n  };\n  const handleAuth = authData => {\n    // changed to account for api \n    setAuthState(authData);\n    if (authData.type === 'user') {\n      localStorage.setItem('authState', JSON.stringify(authData));\n    }\n    setCurrentView('home');\n  };\n  const [selectedCommunity, setSelectedCommunity] = useState(null);\n  const [communities, setCommunities] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [posts, setPosts] = useState([]);\n  const [selectedPostID, setSelectedPostID] = useState(null);\n  const [selectedParentCommentID, setSelectedParentCommentID] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedCommentToEdit, setSelectedCommentToEdit] = useState(null); // the folowing added are for editing comments,comm,posts\n  const [selectedCommunityToEdit, setSelectedCommunityToEdit] = useState(null);\n  const [selectedPostToEdit, setSelectedPostToEdit] = useState(null);\n  useEffect(() => {\n    // this one fetch innit data\n    const fetchInitialData = async () => {\n      try {\n        setLoading(true);\n        const [communitiesResponse, postsResponse, linkFlairsResponse] = await Promise.all([api.fetchCommunities(), api.fetchPosts(), api.fetchLinkFlairs()]);\n        setCommunities(communitiesResponse.data);\n        const initialPosts = postsResponse.data.map(post => {\n          const community = communitiesResponse.data.find(c => c.postIDs.includes(post._id));\n          const linkFlair = linkFlairsResponse.data.find(flair => flair._id === post.linkFlairID);\n          return {\n            ...post,\n            communityName: community ? community.name : 'Unknown Community',\n            linkFlair: linkFlair ? linkFlair.content : null\n          };\n        });\n        setPosts(initialPosts);\n      } catch (err) {\n        setError(err.message);\n        console.error('Error fetching initial data:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // Only fetch data if user is authenticated or guest\n    if (authState.type) {\n      fetchInitialData();\n    }\n  }, [authState.type]); // Re-fetch when auth state changes\n\n  // MAIN NAVI\n  const navigateTo = async (view, data = null) => {\n    if ((view === 'post' || view === 'newComment') && data !== null && data !== void 0 && data.postID) {\n      setSelectedPostID(data.postID);\n      setSelectedParentCommentID((data === null || data === void 0 ? void 0 : data.parentCommentID) || null);\n      setSelectedCommentToEdit((data === null || data === void 0 ? void 0 : data.commentToEdit) || null);\n    } else if (view === 'newCommunity' && data !== null && data !== void 0 && data.communityToEdit) {\n      setSelectedCommunityToEdit(data.communityToEdit);\n    } else if (view === 'newPost' && data !== null && data !== void 0 && data.postToEdit) {\n      setSelectedPostToEdit(data.postToEdit);\n    } else {\n      setSelectedPostID(null);\n      setSelectedParentCommentID(null);\n      setSelectedCommentToEdit(null);\n      setSelectedCommunityToEdit(null);\n      setSelectedPostToEdit(null);\n    }\n    setCurrentView(view);\n  };\n\n  //selection handler\n  const handleCommunitySelect = async community => {\n    try {\n      console.log('Selected community:', community);\n      if (!community || !community._id) {\n        console.error('Invalid community data:', community);\n        return;\n      }\n\n      // Make sure we're using the full _id\n      const communityId = community._id.toString();\n      console.log('Using community ID:', communityId);\n      setSelectedCommunity(community);\n      setCurrentView('community');\n      const response = await api.fetchPostsByCommunity(communityId); // api call\n      console.log('Community posts response:', response);\n\n      // Ensure we have an array and transform the posts\n      const communityPosts = Array.isArray(response.data) ? response.data.map(post => ({\n        ...post,\n        communityName: community.name\n      })) : [];\n      console.log('Processed posts:', communityPosts);\n      setPosts(communityPosts);\n    } catch (err) {\n      var _err$response;\n      console.error('Error fetching community posts:', err);\n      console.error('Error details:', {\n        message: err.message,\n        response: (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data\n      });\n      setError(err.message);\n    }\n  };\n\n  // search \n  const onSearch = query => {\n    setSearchQuery(query);\n    navigateTo('search');\n  };\n\n  // Home click handler\n  const handleHomeClick = async () => {\n    try {\n      setSelectedCommunity(null);\n      const [postsResponse, communitiesResponse] = await Promise.all([api.fetchPosts(),\n      // api calls\n      api.fetchCommunities()]);\n      const allPosts = postsResponse.data.map(post => {\n        const community = communitiesResponse.data.find(c => c.postIDs.includes(post._id));\n        return {\n          ...post,\n          communityName: community ? community.name : 'Unknown Community',\n          linkFlair: post.linkFlairID ? post.linkFlairID.content : null\n        };\n      });\n      setPosts(allPosts);\n      navigateTo('home');\n    } catch (err) {\n      setError(err.message);\n      console.error('Error fetching home data:', err);\n    }\n  };\n  const handleCreatePost = () => navigateTo('newPost');\n  const handleCreateComment = async postID => {\n    setSelectedPostID(postID);\n    navigateTo('newComment');\n  };\n  const handleCreateCommunity = () => navigateTo('newCommunity');\n\n  // View renderer\n  const renderView = () => {\n    if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 25\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 23\n    }, this);\n    switch (currentView) {\n      case 'home':\n        return /*#__PURE__*/_jsxDEV(HomeView, {\n          onNavigate: navigateTo,\n          posts: posts,\n          postsCount: posts.length,\n          authState: authState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this);\n      case 'community':\n        return /*#__PURE__*/_jsxDEV(CommunityView, {\n          onNavigate: navigateTo,\n          community: selectedCommunity,\n          posts: posts,\n          authState: authState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this);\n      case 'search':\n        return /*#__PURE__*/_jsxDEV(SearchView, {\n          onNavigate: navigateTo,\n          searchQuery: searchQuery,\n          authState: authState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this);\n      case 'post':\n        return /*#__PURE__*/_jsxDEV(PostView, {\n          onNavigate: navigateTo,\n          postID: selectedPostID,\n          onCreateComment: handleCreateComment,\n          authState: authState // stops commenting and updoots\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this);\n      case 'newCommunity':\n        return /*#__PURE__*/_jsxDEV(NewCommunityView, {\n          onNavigate: handleCommunitySelect,\n          authState: authState,\n          communityToEdit: selectedCommunityToEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this);\n      case 'profile':\n        return /*#__PURE__*/_jsxDEV(UserProfileView, {\n          authState: authState,\n          onNavigate: navigateTo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this);\n      case 'newPost':\n        return /*#__PURE__*/_jsxDEV(NewPostView, {\n          onNavigate: navigateTo,\n          getMeHome: handleHomeClick,\n          postToEdit: selectedPostToEdit,\n          authState: authState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this);\n      case 'newComment':\n        return /*#__PURE__*/_jsxDEV(NewCommentView, {\n          onNavigate: navigateTo,\n          postID: selectedPostID,\n          parentCommentID: selectedParentCommentID,\n          commentToEdit: selectedCommentToEdit,\n          authState: authState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(HomeView, {\n          onNavigate: navigateTo,\n          posts: posts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  if (currentView === 'welcome' && !authState.type) {\n    return /*#__PURE__*/_jsxDEV(WelcomePage, {\n      onAuth: handleAuth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Banner, {\n      currentView: currentView,\n      onCreatePost: handleCreatePost,\n      onSearch: onSearch,\n      authState: authState,\n      onHomeClick: handleHomeClick,\n      onPhredditClick: () => setCurrentView('welcome'),\n      onLogout: handleLogout,\n      onProfileClick: handleProfileClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"phreddit-container\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        communities: communities,\n        onHomeClick: handleHomeClick,\n        onCreateCommunity: handleCreateCommunity,\n        onCommunitySelect: handleCommunitySelect,\n        selectedCommunity: selectedCommunity,\n        currentView: currentView,\n        authState: authState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main\",\n        children: renderView()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 336,\n    columnNumber: 5\n  }, this);\n}\n_s(Phreddit, \"euk4jjVoahVr9kwjH8sj6CnREkI=\");\n_c = Phreddit;\nvar _c;\n$RefreshReg$(_c, \"Phreddit\");","map":{"version":3,"names":["useState","useEffect","Banner","Navbar","HomeView","CommunityView","SearchView","PostView","NewCommunityView","NewPostView","NewCommentView","WelcomePage","UserProfileView","api","jsxDEV","_jsxDEV","Phreddit","_s","currentView","setCurrentView","authState","setAuthState","savedAuth","localStorage","getItem","JSON","parse","type","user","setItem","stringify","removeItem","checkAuthStatus","authResponse","checkAuth","data","authenticated","err","handleLogout","logout","console","error","handleProfileClick","handleAuth","authData","selectedCommunity","setSelectedCommunity","communities","setCommunities","searchQuery","setSearchQuery","posts","setPosts","selectedPostID","setSelectedPostID","selectedParentCommentID","setSelectedParentCommentID","loading","setLoading","setError","selectedCommentToEdit","setSelectedCommentToEdit","selectedCommunityToEdit","setSelectedCommunityToEdit","selectedPostToEdit","setSelectedPostToEdit","fetchInitialData","communitiesResponse","postsResponse","linkFlairsResponse","Promise","all","fetchCommunities","fetchPosts","fetchLinkFlairs","initialPosts","map","post","community","find","c","postIDs","includes","_id","linkFlair","flair","linkFlairID","communityName","name","content","message","navigateTo","view","postID","parentCommentID","commentToEdit","communityToEdit","postToEdit","handleCommunitySelect","log","communityId","toString","response","fetchPostsByCommunity","communityPosts","Array","isArray","_err$response","onSearch","query","handleHomeClick","allPosts","handleCreatePost","handleCreateComment","handleCreateCommunity","renderView","children","fileName","_jsxFileName","lineNumber","columnNumber","onNavigate","postsCount","length","onCreateComment","getMeHome","onAuth","onCreatePost","onHomeClick","onPhredditClick","onLogout","onProfileClick","className","onCreateCommunity","onCommunitySelect","_c","$RefreshReg$"],"sources":["/Users/thomasmbrice/Desktop/coding/cse316/gamer/project-predditstoriesyoutubeshorts/client/src/components/phreddit.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport Banner from './layout/Banner';\nimport Navbar from './layout/Navbar';\nimport HomeView from './views/HomeView';\nimport CommunityView from './views/CommunityView';\nimport SearchView from './views/SearchView';\nimport PostView from './views/PostView';\nimport NewCommunityView from './views/NewCommunityView';\nimport NewPostView from './views/NewPostView';\nimport NewCommentView from './views/NewCommentView';\nimport WelcomePage from './views/welcome';\nimport UserProfileView from './views/UserProfileView';\nimport * as api from '../api'; \n\nexport default function Phreddit() {\n  const [currentView, setCurrentView] = useState('welcome'); // defults to welcome\n\n  const [authState, setAuthState] = useState(() => {\n    const savedAuth = localStorage.getItem('authState');\n    try {\n      return savedAuth ? JSON.parse(savedAuth) : { type: null, user: null };\n    } catch {\n      return { type: null, user: null };\n    }\n  });\n  \n\n  useEffect(() => {\n    if (authState?.type) {\n      localStorage.setItem('authState', JSON.stringify(authState));\n    } else {\n      localStorage.removeItem('authState');\n    }\n  }, [authState]);\n  \n  useEffect(() => {\n    // Redirect to home if the user is authenticated on refresh\n    if (authState.type) {\n      setCurrentView('home');\n    } else {\n      setCurrentView('welcome');\n    }\n  }, [authState.type]); // This ensures it runs when `authState.type` changes\n  \n\n  useEffect(() => {\n    const checkAuthStatus = async () => {\n      try {\n        const authResponse = await api.checkAuth();\n        if (authResponse.data.authenticated) {\n          setAuthState({ \n            type: 'user', \n            user: { user: authResponse.data.user } // Match structure\n          });\n        }\n      } catch (err) {\n        localStorage.removeItem('authState');\n        setAuthState({ type: null, user: null });\n      }\n    };\n  \n    checkAuthStatus();\n  }, []);\n  \n\n  \n\n  const handleLogout = async () => {\n    try {\n      await api.logout();\n    } catch (err) {\n      console.error('Logout error:', err);\n    } finally {\n      localStorage.removeItem('authState');\n      setAuthState({ type: null, user: null });\n      setCurrentView('welcome');\n    }\n  };\n  \n  const handleProfileClick = () => { // new\n    setCurrentView('profile');\n  };\n  \n  const handleAuth = (authData) => { // changed to account for api \n    setAuthState(authData);\n    if (authData.type === 'user') {\n      localStorage.setItem('authState', JSON.stringify(authData));\n    }\n    setCurrentView('home');\n  };\n  \n  \n  \n  const [selectedCommunity, setSelectedCommunity] = useState(null);\n  const [communities, setCommunities] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [posts, setPosts] = useState([]);\n  const [selectedPostID, setSelectedPostID] = useState(null);\n  const [selectedParentCommentID, setSelectedParentCommentID] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const [selectedCommentToEdit, setSelectedCommentToEdit] = useState(null); // the folowing added are for editing comments,comm,posts\n  const [selectedCommunityToEdit, setSelectedCommunityToEdit] = useState(null);\n  const [selectedPostToEdit, setSelectedPostToEdit] = useState(null);\n\n  useEffect(() => { // this one fetch innit data\n    const fetchInitialData = async () => {\n      try {\n        setLoading(true);\n        const [communitiesResponse, postsResponse, linkFlairsResponse] = await Promise.all([\n          api.fetchCommunities(),\n          api.fetchPosts(),\n          api.fetchLinkFlairs()\n        ]);\n      \n        setCommunities(communitiesResponse.data);\n\n        const initialPosts = postsResponse.data.map(post => {\n          const community = communitiesResponse.data.find(\n            c => c.postIDs.includes(post._id)\n          );\n          const linkFlair = linkFlairsResponse.data.find(\n            flair => flair._id === post.linkFlairID\n          );\n          return {\n            ...post,\n            communityName: community ? community.name : 'Unknown Community',\n            linkFlair: linkFlair ? linkFlair.content : null\n          };\n        });\n        setPosts(initialPosts);\n      } catch (err) {\n        setError(err.message);\n        console.error('Error fetching initial data:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // Only fetch data if user is authenticated or guest\n    if (authState.type) {\n      fetchInitialData();\n    }\n  }, [authState.type]); // Re-fetch when auth state changes\n\n\n  // MAIN NAVI\n  const navigateTo = async (view, data = null) => {\n    if ((view === 'post' || view === 'newComment') && data?.postID) {\n      setSelectedPostID(data.postID);\n      setSelectedParentCommentID(data?.parentCommentID || null);\n      setSelectedCommentToEdit(data?.commentToEdit || null);\n    } else if (view === 'newCommunity' && data?.communityToEdit) {\n      setSelectedCommunityToEdit(data.communityToEdit);\n    } else if (view === 'newPost' && data?.postToEdit) {\n      setSelectedPostToEdit(data.postToEdit);\n    } else {\n      setSelectedPostID(null);\n      setSelectedParentCommentID(null);\n      setSelectedCommentToEdit(null);\n      setSelectedCommunityToEdit(null);\n      setSelectedPostToEdit(null);\n    }\n    setCurrentView(view);\n  };\n  \n  //selection handler\n  const handleCommunitySelect = async (community) => {\n    try {\n        console.log('Selected community:', community);\n        \n        if (!community || !community._id) {\n            console.error('Invalid community data:', community);\n            return;\n        }\n\n        // Make sure we're using the full _id\n        const communityId = community._id.toString();\n        console.log('Using community ID:', communityId);\n\n        setSelectedCommunity(community);\n        setCurrentView('community');\n        \n        const response = await api.fetchPostsByCommunity(communityId); // api call\n        console.log('Community posts response:', response);\n\n        // Ensure we have an array and transform the posts\n        const communityPosts = Array.isArray(response.data) \n            ? response.data.map(post => ({\n                ...post,\n                communityName: community.name\n              }))\n            : [];\n            \n        console.log('Processed posts:', communityPosts);\n        setPosts(communityPosts);\n    } catch (err) {\n        console.error('Error fetching community posts:', err);\n        console.error('Error details:', {\n            message: err.message,\n            response: err.response?.data\n        });\n        setError(err.message);\n    }\n};\n\n\n  // search \n  const onSearch = (query) => {\n    setSearchQuery(query);\n    navigateTo('search');\n  };\n\n  // Home click handler\n  const handleHomeClick = async () => {\n    try {\n      setSelectedCommunity(null);\n      const [postsResponse, communitiesResponse] = await Promise.all([\n        api.fetchPosts(), // api calls\n        api.fetchCommunities()\n      ]);\n\n      const allPosts = postsResponse.data.map(post => {\n        const community = communitiesResponse.data.find(\n          c => c.postIDs.includes(post._id)\n        );\n        return {\n          ...post,\n          communityName: community ? community.name : 'Unknown Community',\n          linkFlair: post.linkFlairID ? post.linkFlairID.content : null\n        };\n      });\n      setPosts(allPosts);\n      navigateTo('home');\n    } catch (err) {\n      setError(err.message);\n      console.error('Error fetching home data:', err);\n    }\n  };\n\n  const handleCreatePost = () => navigateTo('newPost');\n  \n  const handleCreateComment = async (postID) => {\n    setSelectedPostID(postID);\n    navigateTo('newComment');\n  };\n\n  const handleCreateCommunity = () => navigateTo('newCommunity');\n\n  // View renderer\n  const renderView = () => {\n    if (loading) return <div>Loading...</div>;\n    if (error) return <div>Error: {error}</div>;\n\n    switch(currentView) {\n      case 'home':\n        return (\n          <HomeView \n            onNavigate={navigateTo} \n            posts={posts} \n            postsCount={posts.length}\n            authState={authState}\n          />\n        );\n      case 'community':\n        return (\n          <CommunityView \n            onNavigate={navigateTo} \n            community={selectedCommunity} \n            posts={posts}\n            authState={authState}\n          />\n        );\n      case 'search':\n        return (\n          <SearchView \n            onNavigate={navigateTo} \n            searchQuery={searchQuery}\n            authState={authState}\n          />\n        );\n      case 'post':\n        return (\n          <PostView \n            onNavigate={navigateTo}\n            postID={selectedPostID}\n            onCreateComment={handleCreateComment}\n            authState={authState}  // stops commenting and updoots\n          />\n        );\n      case 'newCommunity':\n        return (\n          <NewCommunityView \n            onNavigate={handleCommunitySelect}\n            authState={authState}  \n            communityToEdit={selectedCommunityToEdit}  \n          />\n        );\n      case 'profile':\n        return (\n          <UserProfileView \n            authState={authState}\n            onNavigate={navigateTo}\n          />\n        );\n      case 'newPost':\n        return (\n          <NewPostView \n            onNavigate={navigateTo} \n            getMeHome={handleHomeClick}\n            postToEdit={selectedPostToEdit}\n            authState={authState}  \n          />\n        );\n      case 'newComment':\n        return (\n          <NewCommentView \n            onNavigate={navigateTo} \n            postID={selectedPostID} \n            parentCommentID={selectedParentCommentID}\n            commentToEdit={selectedCommentToEdit}  \n            authState={authState}  \n          />\n        );\n      default:\n        return <HomeView onNavigate={navigateTo} posts={posts} />;\n    }\n  };\n\n  if (currentView === 'welcome' && !authState.type) {\n    return <WelcomePage onAuth={handleAuth} />;\n  }\n\n  return (\n    <div>\n      <Banner \n        currentView={currentView} \n        onCreatePost={handleCreatePost} \n        onSearch={onSearch}\n        authState={authState}\n        onHomeClick={handleHomeClick}\n        onPhredditClick={() => setCurrentView('welcome')}\n        onLogout={handleLogout}\n        onProfileClick={handleProfileClick}\n      />\n      <div className=\"phreddit-container\">\n        <Navbar\n          communities={communities}\n          onHomeClick={handleHomeClick}\n          onCreateCommunity={handleCreateCommunity}\n          onCommunitySelect={handleCommunitySelect}\n          selectedCommunity={selectedCommunity}\n          currentView={currentView}\n          authState={authState}\n        />\n        <main className=\"main\">\n          {renderView()}\n        </main>\n      </div>\n    </div>\n\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}