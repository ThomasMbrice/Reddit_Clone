{"ast":null,"code":"var _jsxFileName = \"/Users/thomasmbrice/Desktop/coding/cse316/gamer/project-predditstoriesyoutubeshorts/client/src/components/views/NewPostView.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport * as api from '../../api'; // Adjust the path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewPostView({\n  onNavigate,\n  getMeHome,\n  authState,\n  postToEdit = null\n}) {\n  _s();\n  const [communities, setCommunities] = useState([]);\n  const [linkFlairs, setLinkFlairs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [community, setCommunity] = useState('');\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  //const [username, setUsername] = useState('');\n  const [linkFlair, setLinkFlair] = useState('');\n  const [newLinkFlair, setNewLinkFlair] = useState('');\n  const [errors, setErrors] = useState({\n    title: '',\n    content: '',\n    //username: '',\n    linkFlair: '',\n    community: ''\n  });\n\n  // fetch comm for mount \n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const [communitiesResponse, linkFlairsResponse] = await Promise.all([api.fetchCommunities(), api.fetchLinkFlairs()]);\n        setCommunities(communitiesResponse.data);\n        setLinkFlairs(linkFlairsResponse.data);\n      } catch (err) {\n        setError('Error loading data: ' + err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (postToEdit) {\n      var _postToEdit$linkFlair;\n      setTitle(postToEdit.title);\n      setContent(postToEdit.content);\n      setLinkFlair(((_postToEdit$linkFlair = postToEdit.linkFlairID) === null || _postToEdit$linkFlair === void 0 ? void 0 : _postToEdit$linkFlair._id) || '');\n      const findCommunity = async () => {\n        try {\n          const communitiesResponse = await api.fetchCommunities();\n          const community = communitiesResponse.data.find(comm => comm.postIDs.includes(postToEdit._id));\n          if (community) {\n            setCommunity(community._id);\n          }\n        } catch (err) {\n          console.error('Error finding community:', err);\n        }\n      };\n      findCommunity();\n    }\n  }, [postToEdit]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newErrors = {};\n\n    // validatio \n    if (!title || title.length > 100) newErrors.title = 'Title is required and must be less than 100 characters.';\n    if (!content) newErrors.content = 'Post content is required.';\n    //if (!linkFlair && !newLinkFlair) newErrors.linkFlair = 'Please select or create a link flair.'; no need\n    if (!community) newErrors.community = 'Please select a community.';\n    setErrors(newErrors);\n    if (!Object.values(newErrors).some(error => error)) {\n      try {\n        let usedLinkFlairID = linkFlair;\n        if (newLinkFlair) {\n          const newFlairResponse = await api.createLinkFlair({\n            content: newLinkFlair\n          });\n          usedLinkFlairID = newFlairResponse.data._id;\n        }\n\n        // Create post data object, omitting linkFlairID if it's empty\n        const postData = {\n          title,\n          content,\n          communityId: community,\n          ...(usedLinkFlairID ? {\n            linkFlairID: usedLinkFlairID\n          } : {})\n        };\n        if (postToEdit) {\n          await api.editPost(postToEdit._id, postData);\n        } else {\n          // Add postedBy only for new posts\n          await api.createPost({\n            ...postData,\n            postedBy: authState.user.user.displayName\n          });\n        }\n        getMeHome();\n      } catch (err) {\n        var _err$response, _err$response$data;\n        console.error('Post operation error:', err);\n        setError('Error with post: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message));\n      }\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: postToEdit ? 'Edit Post' : 'Create New Post'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"community\",\n          children: \"Community: *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"community\",\n          value: community,\n          onChange: e => setCommunity(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a community\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), communities.map(comm => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: comm._id,\n            children: comm.name\n          }, comm._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), errors.community && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: errors.community\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title: *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          maxLength: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), errors.title && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: errors.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"linkFlair\",\n          children: \"Link Flair:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"linkFlair\",\n          value: linkFlair,\n          onChange: e => {\n            setLinkFlair(e.target.value);\n            setNewLinkFlair('');\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a link flair\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), linkFlairs.map(flair => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: flair._id,\n            children: flair.content\n          }, flair._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Or create a new link flair:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newLinkFlair,\n          onChange: e => {\n            setNewLinkFlair(e.target.value);\n            setLinkFlair('');\n          },\n          maxLength: 30,\n          placeholder: \"New link flair\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), errors.linkFlair && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: errors.linkFlair\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"content\",\n          children: \"Content: *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"content\",\n          value: content,\n          onChange: e => setContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), errors.content && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: errors.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n_s(NewPostView, \"SaQ8jTzhVu/nzqMJhjYmqULeLu0=\");\n_c = NewPostView;\nvar _c;\n$RefreshReg$(_c, \"NewPostView\");","map":{"version":3,"names":["useState","useEffect","api","jsxDEV","_jsxDEV","NewPostView","onNavigate","getMeHome","authState","postToEdit","_s","communities","setCommunities","linkFlairs","setLinkFlairs","loading","setLoading","error","setError","community","setCommunity","title","setTitle","content","setContent","linkFlair","setLinkFlair","newLinkFlair","setNewLinkFlair","errors","setErrors","fetchData","communitiesResponse","linkFlairsResponse","Promise","all","fetchCommunities","fetchLinkFlairs","data","err","message","_postToEdit$linkFlair","linkFlairID","_id","findCommunity","find","comm","postIDs","includes","console","handleSubmit","e","preventDefault","newErrors","length","Object","values","some","usedLinkFlairID","newFlairResponse","createLinkFlair","postData","communityId","editPost","createPost","postedBy","user","displayName","_err$response","_err$response$data","response","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","value","onChange","target","map","name","style","color","type","maxLength","flair","placeholder","_c","$RefreshReg$"],"sources":["/Users/thomasmbrice/Desktop/coding/cse316/gamer/project-predditstoriesyoutubeshorts/client/src/components/views/NewPostView.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport * as api from '../../api'; // Adjust the path as needed\n\nexport default function NewPostView({ onNavigate, getMeHome,authState,postToEdit = null }) {\n  const [communities, setCommunities] = useState([]);\n  const [linkFlairs, setLinkFlairs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const [community, setCommunity] = useState('');\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  //const [username, setUsername] = useState('');\n  const [linkFlair, setLinkFlair] = useState('');\n  const [newLinkFlair, setNewLinkFlair] = useState('');\n\n  const [errors, setErrors] = useState({\n    title: '',\n    content: '',\n    //username: '',\n    linkFlair: '',\n    community: '',\n  });\n\n  // fetch comm for mount \n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const [communitiesResponse, linkFlairsResponse] = await Promise.all([\n          api.fetchCommunities(),\n          api.fetchLinkFlairs()\n        ]);\n        setCommunities(communitiesResponse.data);\n        setLinkFlairs(linkFlairsResponse.data);\n      } catch (err) {\n        setError('Error loading data: ' + err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (postToEdit) {\n      setTitle(postToEdit.title);\n      setContent(postToEdit.content);\n      setLinkFlair(postToEdit.linkFlairID?._id || '');\n\n      const findCommunity = async () => {\n        try {\n          const communitiesResponse = await api.fetchCommunities();\n          const community = communitiesResponse.data.find(comm => \n            comm.postIDs.includes(postToEdit._id)\n          );\n          if (community) {\n            setCommunity(community._id);\n          }\n        } catch (err) {\n          console.error('Error finding community:', err);\n        }\n      };\n\n      findCommunity();  \n    }\n  }, [postToEdit]);\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const newErrors = {};\n\n    // validatio \n    if (!title || title.length > 100) newErrors.title = 'Title is required and must be less than 100 characters.';\n    if (!content) newErrors.content = 'Post content is required.';\n    //if (!linkFlair && !newLinkFlair) newErrors.linkFlair = 'Please select or create a link flair.'; no need\n    if (!community) newErrors.community = 'Please select a community.';\n\n    setErrors(newErrors);\n\n    if (!Object.values(newErrors).some(error => error)) {\n      try {\n        let usedLinkFlairID = linkFlair;\n        if (newLinkFlair) {\n          const newFlairResponse = await api.createLinkFlair({ content: newLinkFlair });\n          usedLinkFlairID = newFlairResponse.data._id;\n        }\n  \n        // Create post data object, omitting linkFlairID if it's empty\n        const postData = {\n          title,\n          content,\n          communityId: community,\n          ...(usedLinkFlairID ? { linkFlairID: usedLinkFlairID } : {})\n        };\n  \n        if (postToEdit) {\n          await api.editPost(postToEdit._id, postData);\n        } else {\n          // Add postedBy only for new posts\n          await api.createPost({\n            ...postData,\n            postedBy: authState.user.user.displayName\n          });\n        }\n        getMeHome();\n      } catch (err) {\n        console.error('Post operation error:', err);\n        setError('Error with post: ' + (err.response?.data?.message || err.message));\n      }\n    }\n  };\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  return (\n    <div>\n      <h2>{postToEdit ? 'Edit Post' : 'Create New Post'}</h2>\n      <form onSubmit={handleSubmit}>\n        {/* community */}\n        <div>\n          <label htmlFor=\"community\">Community: *</label>\n          <select\n            id=\"community\"\n            value={community}\n            onChange={(e) => setCommunity(e.target.value)}\n          >\n            <option value=\"\">Select a community</option>\n            {communities.map((comm) => (\n              <option key={comm._id} value={comm._id}>\n                {comm.name}\n              </option>\n            ))}\n          </select>\n          {errors.community && <p style={{ color: 'red' }}>{errors.community}</p>}\n        </div>\n\n        {/* title */}\n        <div>\n          <label htmlFor=\"title\">Title: *</label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            maxLength={100}\n          />\n          {errors.title && <p style={{ color: 'red' }}>{errors.title}</p>}\n        </div>\n\n        {/* link flair */}\n        <div>\n          <label htmlFor=\"linkFlair\">Link Flair:</label>\n          <select\n            id=\"linkFlair\"\n            value={linkFlair}\n            onChange={(e) => {\n              setLinkFlair(e.target.value);\n              setNewLinkFlair('');\n            }}\n          >\n            <option value=\"\">Select a link flair</option>\n            {linkFlairs.map((flair) => (\n              <option key={flair._id} value={flair._id}>\n                {flair.content}\n              </option>\n            ))}\n          </select>\n          <p>Or create a new link flair:</p>\n          <input\n            type=\"text\"\n            value={newLinkFlair}\n            onChange={(e) => {\n              setNewLinkFlair(e.target.value);\n              setLinkFlair('');\n            }}\n            maxLength={30}\n            placeholder=\"New link flair\"\n          />\n          {errors.linkFlair && <p style={{ color: 'red' }}>{errors.linkFlair}</p>}\n        </div>\n\n        {/* content */}\n        <div>\n          <label htmlFor=\"content\">Content: *</label>\n          <textarea\n            id=\"content\"\n            value={content}\n            onChange={(e) => setContent(e.target.value)}\n          ></textarea>\n          {errors.content && <p style={{ color: 'red' }}>{errors.content}</p>}\n        </div>\n        {/* Submit Button */}\n        <button type=\"submit\">Submit Post</button>\n      </form>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}