{"ast":null,"code":"var _jsxFileName = \"/Users/thomasmbrice/Desktop/coding/cse316/gamer/project-predditstoriesyoutubeshorts/client/src/components/post/PostCard.js\";\nimport React, { useState } from 'react';\nimport Time from '../utils/Time';\nimport * as api from '../../api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PostCard({\n  posts,\n  sortOrder = 'Newest',\n  onPostClick,\n  hideCommonityName = false,\n  authState\n}) {\n  //old methods\n  const sortedPosts = [...posts].sort((a, b) => {\n    if (sortOrder === 'Newest') {\n      return new Date(b.postedDate) - new Date(a.postedDate);\n    } else if (sortOrder === 'Oldest') {\n      return new Date(a.postedDate) - new Date(b.postedDate);\n    } else if (sortOrder === 'Active') {\n      const getMostRecentCommentDate = post => {\n        if (!post.commentIDs || post.commentIDs.length === 0) {\n          return new Date(post.postedDate);\n        }\n        return new Date(Math.max(...post.commentIDs.map(comment => new Date(comment.commentedDate || post.postedDate))));\n      };\n      const aLatestComment = getMostRecentCommentDate(a);\n      const bLatestComment = getMostRecentCommentDate(b);\n      if (aLatestComment.getTime() !== bLatestComment.getTime()) {\n        return bLatestComment - aLatestComment;\n      }\n      return new Date(b.postedDate) - new Date(a.postedDate);\n    }\n    return 0;\n  });\n  const countTotalComments = comments => {\n    if (!comments) return 0;\n    let total = comments.length;\n    const countReplies = comment => {\n      var _comment$commentIDs;\n      if ((comment === null || comment === void 0 ? void 0 : (_comment$commentIDs = comment.commentIDs) === null || _comment$commentIDs === void 0 ? void 0 : _comment$commentIDs.length) > 0) {\n        total += comment.commentIDs.length;\n        comment.commentIDs.forEach(reply => {\n          countReplies(reply);\n        });\n      }\n    };\n    comments.forEach(comment => {\n      countReplies(comment);\n    });\n    return total;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts-container\",\n    style: {\n      maxHeight: '80vh',\n      overflowY: 'auto'\n    },\n    children: sortedPosts.map(post => {\n      var _post$linkFlairID, _post$linkFlairID2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        onClick: () => onPostClick(post.postID),\n        style: {\n          padding: '15px',\n          borderBottom: '1px dotted black',\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-header\",\n          style: {\n            marginBottom: '8px'\n          },\n          children: [!hideCommonityName && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"community-name\",\n              style: {\n                fontWeight: 'bold'\n              },\n              children: post.communityName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"separator\",\n              children: \" | \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"posted-by\",\n            children: post.postedBy\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"separator\",\n            children: \" | \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timestamp\",\n            children: /*#__PURE__*/_jsxDEV(Time, {\n              date: post.postedDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"post-title\",\n          style: {\n            margin: '8px 0'\n          },\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), (post.linkFlair || ((_post$linkFlairID = post.linkFlairID) === null || _post$linkFlairID === void 0 ? void 0 : _post$linkFlairID.content)) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"link-flair\",\n          children: post.linkFlair || ((_post$linkFlairID2 = post.linkFlairID) === null || _post$linkFlairID2 === void 0 ? void 0 : _post$linkFlairID2.content)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"post-content\",\n          style: {\n            margin: '8px 0'\n          },\n          children: [post.content.slice(0, 80), post.content.length > 80 ? '...' : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-stats\",\n          style: {\n            display: 'flex',\n            gap: '20px',\n            fontSize: '0.9em',\n            color: '#666'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [post.views, \" views\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [countTotalComments(post.commentIDs), \" comments\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [post.votes || 0, \" votes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_c = PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["React","useState","Time","api","jsxDEV","_jsxDEV","Fragment","_Fragment","PostCard","posts","sortOrder","onPostClick","hideCommonityName","authState","sortedPosts","sort","a","b","Date","postedDate","getMostRecentCommentDate","post","commentIDs","length","Math","max","map","comment","commentedDate","aLatestComment","bLatestComment","getTime","countTotalComments","comments","total","countReplies","_comment$commentIDs","forEach","reply","className","style","maxHeight","overflowY","children","_post$linkFlairID","_post$linkFlairID2","onClick","postID","padding","borderBottom","cursor","marginBottom","fontWeight","communityName","fileName","_jsxFileName","lineNumber","columnNumber","postedBy","date","margin","title","linkFlair","linkFlairID","content","slice","display","gap","fontSize","color","views","votes","_id","_c","$RefreshReg$"],"sources":["/Users/thomasmbrice/Desktop/coding/cse316/gamer/project-predditstoriesyoutubeshorts/client/src/components/post/PostCard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Time from '../utils/Time';\nimport * as api from '../../api';\n\nexport default function PostCard({ posts, sortOrder = 'Newest', onPostClick, hideCommonityName = false, authState }) {\n\n  //old methods\n  const sortedPosts = [...posts].sort((a, b) => {\n    if (sortOrder === 'Newest') {\n      return new Date(b.postedDate) - new Date(a.postedDate);\n    } else if (sortOrder === 'Oldest') {\n      return new Date(a.postedDate) - new Date(b.postedDate);\n    } else if (sortOrder === 'Active') {\n      const getMostRecentCommentDate = (post) => {\n        if (!post.commentIDs || post.commentIDs.length === 0) {\n          return new Date(post.postedDate);\n        }\n        return new Date(Math.max(...post.commentIDs.map(comment => \n          new Date(comment.commentedDate || post.postedDate)\n        )));\n      };\n      \n      const aLatestComment = getMostRecentCommentDate(a);\n      const bLatestComment = getMostRecentCommentDate(b);\n      \n      if (aLatestComment.getTime() !== bLatestComment.getTime()) {\n        return bLatestComment - aLatestComment;\n      }\n      return new Date(b.postedDate) - new Date(a.postedDate);\n    }\n    return 0;\n  });\n\n  const countTotalComments = (comments) => {\n    if (!comments) return 0;\n    let total = comments.length;\n\n    const countReplies = (comment) => {\n        if (comment?.commentIDs?.length > 0) {\n            total += comment.commentIDs.length;\n            comment.commentIDs.forEach(reply => {\n                countReplies(reply);\n            });\n        }\n    };\n\n    comments.forEach(comment => {\n        countReplies(comment);\n    });\n\n    return total;\n  };\n\n  return (\n    <div className=\"posts-container\" style={{ maxHeight: '80vh', overflowY: 'auto' }}>\n      {sortedPosts.map((post) => (\n        <div \n          key={post._id}\n          className=\"post\"\n          onClick={() => onPostClick(post.postID)}\n          style={{\n            padding: '15px',\n            borderBottom: '1px dotted black',\n            cursor: 'pointer'\n          }}\n        >\n          <div className=\"post-header\" style={{ marginBottom: '8px' }}>\n            {!hideCommonityName && (\n              <>\n                <span className=\"community-name\" style={{ fontWeight: 'bold' }}>\n                  {post.communityName}\n                </span>\n                <span className=\"separator\"> | </span>\n              </>\n            )}\n            <span className=\"posted-by\">{post.postedBy}</span>\n            <span className=\"separator\"> | </span>\n            <span className=\"timestamp\"><Time date={post.postedDate}/></span>\n          </div>\n        \n          <h3 className=\"post-title\" style={{ margin: '8px 0'}}>\n            {post.title}\n          </h3>\n\n          {(post.linkFlair || post.linkFlairID?.content) && (\n            <div className=\"link-flair\">\n              {post.linkFlair || post.linkFlairID?.content}\n            </div>\n          )}\n\n          <p className=\"post-content\" style={{ margin: '8px 0' }}>\n            {post.content.slice(0, 80)}\n            {post.content.length > 80 ? '...' : ''}\n          </p>\n\n          <div \n            className=\"post-stats\"\n            style={{\n              display: 'flex',\n              gap: '20px',\n              fontSize: '0.9em',\n              color: '#666'\n            }}\n          >\n            <span>{post.views} views</span>\n            <span>{countTotalComments(post.commentIDs)} comments</span>\n            <span>{post.votes || 0} votes</span>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}