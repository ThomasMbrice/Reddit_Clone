{"ast":null,"code":"// api.js\nimport axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:8000',\n  withCredentials: true\n});\nexport const fetchCommunities = () => api.get('/communities'); // routes to comm\nexport const fetchPosts = () => api.get('/posts'); // routes to post\nexport const fetchPostsByCommunity = communityId => api.get(`/communities/${communityId}/posts`); // routes to comm\nexport const fetchLinkFlairs = () => api.get('/linkflairs'); // routes to linkflair \nexport const fetchPost = postId => api.get(`/posts/${postId}`); // routes to post\n\nexport const createLinkFlair = flairData => {\n  // routes to linflair\n  console.log(\"data being logged:\", flairData); // debuggnig\n  return api.post('/linkflairs', flairData);\n};\nexport const incrementViews = postId => api.patch(`/posts/${postId}/views`); // routes to post\n\nexport const searchPosts = searchTerms => api.post('/posts/search', {\n  searchTerms\n}); // specical routes to search \n\n//updoot and downdoot controls\nexport const upvotePost = (postId, username) => api.patch(`/posts/${postId}/upvote`, {\n  username\n});\nexport const downvotePost = (postId, username) => api.patch(`/posts/${postId}/downvote`, {\n  username\n});\nexport const upvoteComment = (commentId, username) => api.patch(`/comments/${commentId}/upvote`, {\n  username\n});\nexport const downvoteComment = (commentId, username) => api.patch(`/comments/${commentId}/downvote`, {\n  username\n});\n\n// New post creation\n\n// New community creation\nexport const createCommunity = communityData => api.post('/communities', communityData); // routes to comm\n\nexport const getCommunityMembers = communityId => api.get(`/communities/${communityId}/members`); // routes to comm\n\nexport const createPost = postData => {\n  //routes to post  \n  return api.post('/posts', {\n    title: postData.title,\n    content: postData.content,\n    postedBy: postData.postedBy,\n    linkFlairID: postData.linkFlairID,\n    communityId: postData.communityId\n  });\n};\nexport const createComment = async (postId, commentData) => {\n  // very spcial routes to comment\n  try {\n    const response = await api.post(`/posts/${postId}/comments`, {\n      content: commentData.content,\n      commentedBy: commentData.commentedBy,\n      parentCommentID: commentData.parentCommentID || null\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response2;\n    console.error('Error creating comment:', error);\n    throw {\n      error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message,\n      status: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status,\n      postID: postId,\n      content: commentData.content\n    };\n  }\n};\n\n// User Authentication\nexport const signUp = userData => api.post('/auth/signup', {\n  firstName: userData.firstName,\n  lastName: userData.lastName,\n  email: userData.email,\n  displayName: userData.displayName,\n  password: userData.password\n});\nexport const login = credentials => api.post('/auth/login', {\n  email: credentials.email,\n  password: credentials.password\n});\nexport const checkAuth = () => api.get('/auth/check');\nexport const logout = () => api.post('/auth/logout');\n\n// User Profile/Reputation\nexport const updateUserReputation = (userId, change) => api.patch(`/users/${userId}/reputation`, {\n  change\n});\nexport const getUserProfile = displayName => api.get(`/users/${displayName}`);\n\n// User profile endpoints\nexport const getUserPosts = userId => api.get(`/users/${userId}/posts`);\nexport const getUserComments = userId => api.get(`/users/${userId}/comments`);\n//export const getUserCommunities = (userId) => api.get(`/users/${userId}/communities`);\n\n// Edit endpoints\nexport const editPost = (postId, postData) => api.patch(`/posts/${postId}`, postData);\nexport const editComment = (commentId, commentData) => api.patch(`/comments/${commentId}`, commentData);\n\n// Delete endpoints\nexport const deletePost = postId => api.delete(`/posts/${postId}`);\nexport const deleteComment = commentId => api.delete(`/comments/${commentId}`);\n\n// community edpoints\nexport const joinCommunity = (communityId, displayName) => api.post(`/communities/${communityId}/join`, {\n  displayName\n});\nexport const leaveCommunity = (communityId, displayName) => api.post(`/communities/${communityId}/leave`, {\n  displayName\n});\nexport const getUserCommunities = displayName => api.get(`/communities/${displayName}/communities`);\nexport const editCommunity = (communityId, updateData) => api.patch(`/communities/${communityId}`, updateData);\nexport const deleteCommunity = communityId => api.delete(`/communities/${communityId}`);\nexport const getUserCreatedCommunities = displayName => api.get(`/communities/created/${displayName}`);\nexport const getUserMemberCommunities = displayName => api.get(`/communities/member/${displayName}`);\nexport const getAllUsers = () => api.get('/users/all'); // shows correct REP\n\nexport const deleteUser = userId => api.delete(`/users/${userId}`);\nexport const removeVote = (postId, username) =>\n// final attempt in not allowing multiple voting\napi.patch(`/posts/${postId}/removevote`, {\n  username\n});\nexport const removeCommentVote = (commentId, username) => api.patch(`/comments/${commentId}/removevote`, {\n  username\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","withCredentials","fetchCommunities","get","fetchPosts","fetchPostsByCommunity","communityId","fetchLinkFlairs","fetchPost","postId","createLinkFlair","flairData","console","log","post","incrementViews","patch","searchPosts","searchTerms","upvotePost","username","downvotePost","upvoteComment","commentId","downvoteComment","createCommunity","communityData","getCommunityMembers","createPost","postData","title","content","postedBy","linkFlairID","createComment","commentData","response","commentedBy","parentCommentID","data","error","_error$response","_error$response2","message","status","postID","signUp","userData","firstName","lastName","email","displayName","password","login","credentials","checkAuth","logout","updateUserReputation","userId","change","getUserProfile","getUserPosts","getUserComments","editPost","editComment","deletePost","delete","deleteComment","joinCommunity","leaveCommunity","getUserCommunities","editCommunity","updateData","deleteCommunity","getUserCreatedCommunities","getUserMemberCommunities","getAllUsers","deleteUser","removeVote","removeCommentVote"],"sources":["/Users/thomasmbrice/Desktop/coding/cse316/gamer/project-predditstoriesyoutubeshorts/client/src/api.js"],"sourcesContent":["// api.js\nimport axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'http://localhost:8000',\n    withCredentials: true\n});\n\nexport const fetchCommunities = () => api.get('/communities'); // routes to comm\nexport const fetchPosts = () => api.get('/posts'); // routes to post\nexport const fetchPostsByCommunity = (communityId) => api.get(`/communities/${communityId}/posts`); // routes to comm\nexport const fetchLinkFlairs = () => api.get('/linkflairs'); // routes to linkflair \nexport const fetchPost = (postId) => api.get(`/posts/${postId}`); // routes to post\n\nexport const createLinkFlair = (flairData) => { // routes to linflair\n    console.log(\"data being logged:\", flairData); // debuggnig\n    return api.post('/linkflairs', flairData);\n};\n\nexport const incrementViews = (postId) => api.patch(`/posts/${postId}/views`); // routes to post\n\nexport const searchPosts = (searchTerms) => api.post('/posts/search', { searchTerms });// specical routes to search \n\n\n//updoot and downdoot controls\nexport const upvotePost = (postId, username) => \n    api.patch(`/posts/${postId}/upvote`, { username });\nexport const downvotePost = (postId, username) => \n    api.patch(`/posts/${postId}/downvote`, { username });\n\nexport const upvoteComment = (commentId, username) => \n    api.patch(`/comments/${commentId}/upvote`, { username });\nexport const downvoteComment = (commentId, username) => \n    api.patch(`/comments/${commentId}/downvote`, { username });\n\n// New post creation\n\n// New community creation\nexport const createCommunity = (communityData) => api.post('/communities', communityData); // routes to comm\n\nexport const getCommunityMembers = (communityId) => api.get(`/communities/${communityId}/members`); // routes to comm\n\nexport const createPost = (postData) => { //routes to post  \n    return api.post('/posts', {\n        title: postData.title,\n        content: postData.content,\n        postedBy: postData.postedBy,\n        linkFlairID: postData.linkFlairID,\n        communityId: postData.communityId\n    });\n};\n\nexport const createComment = async (postId, commentData) => { // very spcial routes to comment\n    try {\n      const response = await api.post(`/posts/${postId}/comments`, {\n            content: commentData.content,\n            commentedBy: commentData.commentedBy,\n            parentCommentID: commentData.parentCommentID || null\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Error creating comment:', error);\n        throw {\n            error: error.response?.data || error.message,\n            status: error.response?.status,\n            postID: postId,\n            content: commentData.content\n        };\n    }\n};\n\n// User Authentication\nexport const signUp = (userData) => api.post('/auth/signup', {\n    firstName: userData.firstName,\n    lastName: userData.lastName,\n    email: userData.email,\n    displayName: userData.displayName,\n    password: userData.password\n});\n\nexport const login = (credentials) => api.post('/auth/login', {\n    email: credentials.email,\n    password: credentials.password\n});\n\nexport const checkAuth = () => api.get('/auth/check');\n\nexport const logout = () => api.post('/auth/logout');\n\n// User Profile/Reputation\nexport const updateUserReputation = (userId, change) => api.patch(`/users/${userId}/reputation`, { change });\nexport const getUserProfile = (displayName) => api.get(`/users/${displayName}`);\n\n// User profile endpoints\nexport const getUserPosts = (userId) => api.get(`/users/${userId}/posts`);\nexport const getUserComments = (userId) => api.get(`/users/${userId}/comments`);\n//export const getUserCommunities = (userId) => api.get(`/users/${userId}/communities`);\n\n// Edit endpoints\nexport const editPost = (postId, postData) => \n    api.patch(`/posts/${postId}`, postData);\n    \nexport const editComment = (commentId, commentData) => \n    api.patch(`/comments/${commentId}`, commentData);\n   \n// Delete endpoints\nexport const deletePost = (postId) => api.delete(`/posts/${postId}`);\n\nexport const deleteComment = (commentId) => \n    api.delete(`/comments/${commentId}`);\n  \n// community edpoints\nexport const joinCommunity = (communityId, displayName) => \n    api.post(`/communities/${communityId}/join`, { displayName });\n\nexport const leaveCommunity = (communityId, displayName) => \n    api.post(`/communities/${communityId}/leave`, { displayName });\n\nexport const getUserCommunities = (displayName) => \n    api.get(`/communities/${displayName}/communities`);\n\nexport const editCommunity = (communityId, updateData) => \n    api.patch(`/communities/${communityId}`, updateData);\n  \nexport const deleteCommunity = (communityId) => \n    api.delete(`/communities/${communityId}`);\n\nexport const getUserCreatedCommunities = (displayName) => \n    api.get(`/communities/created/${displayName}`);\n\nexport const getUserMemberCommunities = (displayName) => \n    api.get(`/communities/member/${displayName}`);\n\nexport const getAllUsers = () => api.get('/users/all'); // shows correct REP\n\nexport const deleteUser = (userId) => api.delete(`/users/${userId}`);\n\nexport const removeVote = (postId, username) =>  // final attempt in not allowing multiple voting\n    api.patch(`/posts/${postId}/removevote`, { username });\n\nexport const removeCommentVote = (commentId, username) => \n    api.patch(`/comments/${commentId}/removevote`, { username });\n\n\n  \nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}