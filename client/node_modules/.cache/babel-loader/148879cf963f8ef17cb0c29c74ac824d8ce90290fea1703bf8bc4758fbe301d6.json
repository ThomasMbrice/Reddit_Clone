{"ast":null,"code":"var _jsxFileName = \"/Users/thomasmbrice/Desktop/coding/cse316/gamer/project-predditstoriesyoutubeshorts/client/src/components/views/NewCommentView.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport * as api from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewCommentView({\n  onNavigate,\n  postID,\n  parentCommentID = null,\n  authState,\n  commentToEdit = null\n}) {\n  _s();\n  //console.log('NewCommentView :', { postID, parentCommentID, commentToEdit });\n  const [content, setContent] = useState((commentToEdit === null || commentToEdit === void 0 ? void 0 : commentToEdit.content) || '');\n  const [errors, setErrors] = useState({\n    content: '',\n    username: ''\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newErrors = {\n      content: ''\n    };\n    if (!content || content.length > 500) {\n      newErrors.content = 'Comment content is required and must be less than 500 characters.';\n    }\n    setErrors(newErrors);\n    if (!Object.values(newErrors).some(error => error)) {\n      try {\n        if (commentToEdit) {\n          await api.editComment(commentToEdit._id, {\n            content\n          });\n        } else {\n          await api.createComment(postID, {\n            content,\n            commentedBy: authState.user.user.displayName,\n            parentCommentID\n          });\n        }\n        onNavigate('post', {\n          postID\n        });\n      } catch (error) {\n        setErrors({\n          content: 'Error saving comment'\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: commentToEdit ? 'Edit Comment' : 'Add a Comment'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"content\",\n          children: \"Content: *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"content\",\n          value: content,\n          onChange: e => setContent(e.target.value),\n          maxLength: 500\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), errors.content && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: errors.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(NewCommentView, \"zQtYxfcdgDiR0vwGbr4R+YcInts=\");\n_c = NewCommentView;\nvar _c;\n$RefreshReg$(_c, \"NewCommentView\");","map":{"version":3,"names":["useState","api","jsxDEV","_jsxDEV","NewCommentView","onNavigate","postID","parentCommentID","authState","commentToEdit","_s","content","setContent","errors","setErrors","username","handleSubmit","e","preventDefault","newErrors","length","Object","values","some","error","editComment","_id","createComment","commentedBy","user","displayName","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","value","onChange","target","maxLength","style","color","type","_c","$RefreshReg$"],"sources":["/Users/thomasmbrice/Desktop/coding/cse316/gamer/project-predditstoriesyoutubeshorts/client/src/components/views/NewCommentView.js"],"sourcesContent":["import { useState } from 'react';\nimport * as api from '../../api';\n\n\nexport default function NewCommentView({ onNavigate, postID, parentCommentID = null,authState,commentToEdit = null }) {\n  //console.log('NewCommentView :', { postID, parentCommentID, commentToEdit });\n  const [content, setContent] = useState(commentToEdit?.content || '');\n  const [errors, setErrors] = useState({ content: '', username: '' });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const newErrors = { content: '' };\n \n    if (!content || content.length > 500) {\n      newErrors.content = 'Comment content is required and must be less than 500 characters.';\n    }\n    \n    setErrors(newErrors);\n \n    if (!Object.values(newErrors).some((error) => error)) {\n      try {\n        if (commentToEdit) {\n          await api.editComment(commentToEdit._id, { content });\n        } else {\n          await api.createComment(postID, {\n            content,\n            commentedBy: authState.user.user.displayName,\n            parentCommentID\n          });\n        }\n        onNavigate('post', { postID });\n      } catch (error) {\n        setErrors({ content: 'Error saving comment' });\n      }\n    }\n  };\n \n\n  return (\n    <div>\n     <h2>{commentToEdit ? 'Edit Comment' : 'Add a Comment'}</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"content\">Content: *</label>\n          <textarea\n            id=\"content\"\n            value={content}\n            onChange={(e) => setContent(e.target.value)}\n            maxLength={500}\n          ></textarea>\n          {errors.content && <p style={{ color: 'red' }}>{errors.content}</p>}\n        </div>\n\n        <button type=\"submit\">Submit Comment</button>\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}